#imports
import pandas as pd 
import numpy as np


xls = pd.ExcelFile('final_data33.xlsx')
df1 = pd.read_excel(xls, 'Supply_Nes')
df2 = pd.read_excel(xls, 'Demand_Nes')

#cell2


#rename the columns 

column_names_list = list(df1.columns[2:])
new_column_names_list = ['PSkillSet','PWrkExp','PProfLvl','SSkillSet','SWrkExp','SProfLvl','DomExp','DomWrkExp','DomProfLvl','Communication','CProfLvl','ProdExp','ProdWrkExp','ProdProfLvl','DataExpt','DWrkExp','DProfLvl']

col_newname_dict = {key:value for key,value in zip(column_names_list,new_column_names_list)}

df1.rename(columns = col_newname_dict,inplace=True)
df2.rename(columns = col_newname_dict,inplace=True)

header_string = ['Designation','PSkillSet','SSkillSet','DomExp','Communication','ProdExp','DataExpt']

header_float=['PWrkExp','PProfLvl','PProfLvl', 'SWrkExp', 'SProfLvl','DomWrkExp','DomProfLvl','CProfLvl','ProdWrkExp', 'ProdProfLvl','DWrkExp', 'DProfLvl']
# changing datatypes of both dataframes
#float
for x in header_float:
    df1[x]=df2[x].astype(float)
    df2[x]=df1[x].astype(float)

#chnaging Nan to None
for headerS in header_string:
    df1[headerS].fillna('None',inplace=True)
    df2[headerS].fillna('None',inplace=True)


#changing float to 0.0    
for headerF in header_float:
    df1[headerF].fillna(float(0),inplace=True)
    df2[headerF].fillna(float(0),inplace=True)
    
#defining designation list
designation_val = {'pat':1,'pa':2,'a':3,'sa':4,'m':5,'sm':6}

#converting whole into lower case
df1 = df1.apply(lambda x: x.str.lower() if x.dtype == object else x)
df1.columns = df1.columns.str.lower()

df2 = df2.apply(lambda x: x.str.lower() if x.dtype == object else x)
df2.columns = df2.columns.str.lower()

#cell3
#definition of function giving score

def score_calculator(df,dict_2):

    dff = pd.DataFrame(columns=['Project ID', 'Associate ID','Associate Primary Skill','Associate Secondary Skill','Required Primary Skill','Required Secondary Skill', 'Score'])
    
    
    for i in range(0,len(df)):
        dict_1 = df.iloc[i].to_dict()
        score = 0
        #primary skillset

        if dict_1['pskillset'] == 'none' or dict_2['pskillset'] == 'none':
            pass
            #print(' primary skillset contains null')
        else:
            x = [value.strip() for value in dict_1['pskillset'].split(",")]
            y = [value.strip() for value in dict_2['pskillset'].split(",")]
            common_elements = len(set(x) & set(y))
            percentage = (common_elements / len(y)) * 100
            if percentage == 0.0:
                pass
                #print('No primary skillset  matched')
            else:
                score+=(percentage/100)*0.56
        #         print('a',score)
                if float(dict_1['pwrkexp']) == 0.0 and float(dict_2['pwrkexp'])== 0.0 :
                    pass
                    #print('primary skillset work experience  is 0 in both')
                elif float(dict_1['pwrkexp']) == float(dict_2['pwrkexp'])  :
                    score+=0.56
                    if float(dict_1['pproflvl']) == 0.0  and float(dict_2['pproflvl'])==0:
                        pass
                        #print('primary skillset work  proficiency  is 0')            
                    elif float(dict_1['pproflvl']) == float(dict_2['pproflvl']):
                        score+=0.56
                    elif float(dict_1['pproflvl']) == float(dict_2['pproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['pproflvl']) == float(dict_2['pproflvl'])-1:
                        score+=0.56
                    else:
                        pass
                        #print('primary skillset proficiency level not matched')
                elif float(dict_1['pwrkexp']) == float(dict_2['pwrkexp'])+1  :
                    score+=0.56
                    if float(dict_1['pproflvl']) == 0.0  and float(dict_2['pproflvl'])==0:
                        pass
                        #print('primary skillset  proficiency  is 0')            
                    elif float(dict_1['pproflvl']) == float(dict_2['pproflvl']):
                        score+=0.56
                    elif float(dict_1['pproflvl']) == float(dict_2['pproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['pproflvl']) == float(dict_2['pproflvl'])-1:
                        score+=0.56
                    else:
                        pass
                        #print('primary skillset  proficiency level not matched')
                elif float(dict_1['pwrkexp']) == float(dict_2['pwrkexp'])-1  :
                    score+=0.56
                    if float(dict_1['pproflvl']) == 0.0  and float(dict_2['pproflvl'])==0:
                        pass
                        #print('primary skillset proficiency  is 0')            
                    elif float(dict_1['pproflvl']) == float(dict_2['pproflvl']):
                        score+=0.56
                    elif float(dict_1['pproflvl']) == float(dict_2['pproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['pproflvl']) == float(dict_2['pproflvl'])-1:
                        score+=0.56
                    else:
                        pass
                        #print('primary skillset proficiency level not matched')


        #secondary skillset
        if dict_1['sskillset'] == 'none' or dict_2['sskillset'] == 'none':
            pass
            #print('Secondary skillset contains null')
        else: 
            x = [value.strip() for value in dict_1['sskillset'].split(",")]    
            y = [value.strip() for value in dict_2['sskillset'].split(",")]   
            common_elements = len(set(x) & set(y))                             
            percentage = (common_elements / len(y)) * 100
            if percentage == 0.0: 
                pass               
                #print('No secondary skills matched')
            else:
                score+=(percentage/100)*0.56  
        #         print('a',score)
                if float(dict_1['swrkexp']) == 0.0 and float(dict_2['swrkexp'])== 0.0 :
                    pass
                    #print('secondary skillset  is 0 in both')
                elif float(dict_1['swrkexp']) == float(dict_2['swrkexp'])  :
                    score+=0.56
                    if float(dict_1['sproflvl']) == 0.0  and float(dict_2['sproflvl'])==0:
                        pass
                        #print('secondary skillset proficiency  is 0')            
                    elif float(dict_1['sproflvl']) == float(dict_2['sproflvl']):
                        score+=0.56
                    elif float(dict_1['sproflvl']) == float(dict_2['sproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['sproflvl']) == float(dict_2['sproflvl'])-1:
                        score+=0.56 
                    else:
                        pass
                        #print('secondary skillset proficiency level not matched')
                elif float(dict_1['swrkexp']) == float(dict_2['swrkexp'])+1  :
                    score+=0.56
                    if float(dict_1['sproflvl']) == 0.0  and float(dict_2['sproflvl'])==0:
                        pass
                        #print('secondary skillset proficiency  is 0')            
                    elif float(dict_1['sproflvl']) == float(dict_2['sproflvl']):
                        score+=0.56
                    elif float(dict_1['sproflvl']) == float(dict_2['sproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['sproflvl']) == float(dict_2['sproflvl'])-1:
                        score+=0.56 
                    else:
                        pass
                        #print('secondary skillset proficiency level not matched')
                elif float(dict_1['swrkexp']) == float(dict_2['swrkexp'])-1  :
                    score+=0.56
                    if float(dict_1['sproflvl']) == 0.0  and float(dict_2['sproflvl'])==0:
                        pass
                        #print('secondary skillset proficiency  is 0')            
                    elif float(dict_1['sproflvl']) == float(dict_2['sproflvl']):
                        score+=0.56
                    elif float(dict_1['sproflvl']) == float(dict_2['sproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['sproflvl']) == float(dict_2['sproflvl'])-1:
                        score+=0.56
                    else:
                        pass
                        #print('secondary skillset proficiency level not matched')


        #Domain Expertise
        if dict_1['domexp'] == 'none' or dict_2['domexp'] == 'none':
            pass
            #print('Domain expertise contains null')
        else:
            x = [value.strip() for value in dict_1['domexp'].split(",")]
            y = [value.strip() for value in dict_2['domexp'].split(",")]
            common_elements = len(set(x) & set(y))
            percentage = (common_elements / len(y)) * 100
            if percentage == 0.0:
                pass
                #print('No domain expertise  matched')
            else:
                score+=(percentage/100)*0.56
        #         print('a',score)
                if float(dict_1['domwrkexp']) == 0.0 and float(dict_2['domwrkexp'])== 0.0 :
                    pass
                    #print('domain expertise work experience  is 0 in both')
                elif float(dict_1['domwrkexp']) == float(dict_2['domwrkexp'])  :
                    score+=0.56
                    if float(dict_1['domproflvl']) == 0.0  and float(dict_2['domproflvl'])==0:
                        pass
                        #print('domain expertise work  proficiency  is 0')            
                    elif float(dict_1['domproflvl']) == float(dict_2['domproflvl']):
                        score+=0.56
                    elif float(dict_1['domproflvl']) == float(dict_2['domproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['domproflvl']) == float(dict_2['domproflvl'])-1:
                        score+=0.56
                    else:
                        pass
                        #print('domain expertise proficiency level not matched')
                elif float(dict_1['domwrkexp']) == float(dict_2['domwrkexp'])+1  :
                    score+=0.56
                    if float(dict_1['domproflvl']) == 0.0  and float(dict_2['domproflvl'])==0:
                        pass
                        #print('domain expertise  proficiency  is 0')            
                    elif float(dict_1['domproflvl']) == float(dict_2['domproflvl']):
                        score+=0.56
                    elif float(dict_1['domproflvl']) == float(dict_2['domproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['domproflvl']) == float(dict_2['domproflvl'])-1:
                        score+=0.56
                    else:
                        pass
                        #print('domain expertise  proficiency level not matched')
                elif float(dict_1['domwrkexp']) == float(dict_2['domwrkexp'])-1  :
                    score+=0.56
                    if float(dict_1['domproflvl']) == 0.0  and float(dict_2['domproflvl'])==0:
                        pass
                        #print('domain expertise proficiency  is 0')            
                    elif float(dict_1['domproflvl']) == float(dict_2['domproflvl']):
                        score+=0.56
                    elif float(dict_1['domproflvl']) == float(dict_2['domproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['domproflvl']) == float(dict_2['domproflvl'])-1:
                        score+=0.56
                    else:
                        pass
                        #print('domain expertise proficiency level not matched')

        #communication

        if dict_1['communication']== 'none' or dict_2['communication']=='none':
            pass
            #print('communication values conatins null')
        elif dict_1['communication']==dict_2['communication']:
            
            score+=0.56
            if float(dict_1['cproflvl']) == float(dict_2['cproflvl'])  :
                score+=0.56
            if float(dict_1['cproflvl']) == float(dict_2['cproflvl'])+1:
                score+=0.56
            if float(dict_1['cproflvl']) == float(dict_2['cproflvl'])-1:
                score+=0.56
        else:
            pass
            #print('communication proficiency level values not matched')
            
            

        #product expertise
        if dict_1['prodexp'] == 'none' or dict_2['prodexp'] == 'none':
            pass
            #print('product expertise contains null')
        else:
            x = [value.strip() for value in dict_1['prodexp'].split(",")]
            y = [value.strip() for value in dict_2['prodexp'].split(",")]
            common_elements = len(set(x) & set(y))
            percentage = (common_elements / len(y)) * 100
            if percentage == 0.0:
                pass
                #print('No product expertise  matched')
            else:
                score+=(percentage/100)*0.56
        #         print('a',score)
                if float(dict_1['prodwrkexp']) == 0.0 and float(dict_2['prodwrkexp'])== 0.0 :
                    pass
                    #print('product expertise work experience  is 0 in both')
                elif float(dict_1['prodwrkexp']) == float(dict_2['prodwrkexp'])  :
                    score+=0.56
                    if float(dict_1['prodproflvl']) == 0.0  and float(dict_2['prodproflvl'])==0:
                        pass
                        #print('product expertise work  proficiency  is 0')            
                    elif float(dict_1['prodproflvl']) == float(dict_2['prodproflvl']):
                        score+=0.56
                    elif float(dict_1['prodproflvl']) == float(dict_2['prodproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['prodproflvl']) == float(dict_2['prodproflvl'])-1:
                        score+=0.56
                    else:
                        pass
                        #print('product expertise proficiency level not matched')
                elif float(dict_1['prodwrkexp']) == float(dict_2['prodwrkexp'])+1  :
                    score+=0.56
                    if float(dict_1['prodproflvl']) == 0.0  and float(dict_2['prodproflvl'])==0:
                        pass
                        #print('product expertise  proficiency  is 0')            
                    elif float(dict_1['prodproflvl']) == float(dict_2['prodproflvl']):
                        score+=0.56
                    elif float(dict_1['prodproflvl']) == float(dict_2['prodproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['prodproflvl']) == float(dict_2['prodproflvl'])-1:
                        score+=0.56
                    else:
                        pass
                        #print('product expertise  proficiency level not matched')
                elif float(dict_1['prodwrkexp']) == float(dict_2['prodwrkexp'])-1  :
                    score+=0.56
                    if float(dict_1['prodproflvl']) == 0.0  and float(dict_2['prodproflvl'])==0:
                        pass
                        #print('product expertise proficiency  is 0')            
                    elif float(dict_1['prodproflvl']) == float(dict_2['prodproflvl']):
                        score+=0.56
                    elif float(dict_1['prodproflvl']) == float(dict_2['prodproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['prodproflvl']) == float(dict_2['prodproflvl'])-1:
                        score+=0.56
                    else:
                        pass
                        #print('product expertise proficiency level not matched')

        #Database expertise
        if dict_1['dataexpt'] == 'none' or dict_2['dataexpt'] == 'none':
            pass
            #print('Data expertise contains null')
        else:
            x = [value.strip() for value in dict_1['dataexpt'].split(",")]
            y = [value.strip() for value in dict_2['dataexpt'].split(",")]
            common_elements = len(set(x) & set(y))
            percentage = (common_elements / len(y)) * 100
            if percentage == 0.0:
                pass
                #print('No Data expertise  matched')
            else:
                score+=(percentage/100)*0.56
        #         print('a',score)
                if float(dict_1['dwrkexp']) == 0.0 and float(dict_2['dwrkexp'])== 0.0 :
                    pass
                    #print('Data expertise work experience  is 0 in both')
                elif float(dict_1['dwrkexp']) == float(dict_2['dwrkexp'])  :
                    score+=0.56
                    if float(dict_1['dproflvl']) == 0.0  and float(dict_2['dproflvl'])==0:
                        pass
                        #print('Data expertise work  proficiency  is 0')            
                    elif float(dict_1['dproflvl']) == float(dict_2['dproflvl']):
                        score+=0.56
                    elif float(dict_1['dproflvl']) == float(dict_2['dproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['dproflvl']) == float(dict_2['dproflvl'])-1:
                        score+=0.56
                    else:
                        pass
                        #print('Data expertise proficiency level not matched')
                elif float(dict_1['dwrkexp']) == float(dict_2['dwrkexp'])+1  :
                    score+=0.56
                    if float(dict_1['dproflvl']) == 0.0  and float(dict_2['dproflvl'])==0:
                        pass
                        #print('Data expertise  proficiency  is 0')            
                    elif float(dict_1['dproflvl']) == float(dict_2['dproflvl']):
                        score+=0.56
                    elif float(dict_1['dproflvl']) == float(dict_2['dproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['dproflvl']) == float(dict_2['dproflvl'])-1:
                        score+=0.56
                    else:
                        pass
                        #print('Data expertise  proficiency level not matched')
                elif float(dict_1['dwrkexp']) == float(dict_2['dwrkexp'])-1  :
                    score+=0.56
                    if float(dict_1['dproflvl']) == 0.0  and float(dict_2['dproflvl'])==0:
                        pass
                        #print('Data expertise proficiency  is 0')            
                    elif float(dict_1['dproflvl']) == float(dict_2['dproflvl']):
                        score+=0.56
                    elif float(dict_1['dproflvl']) == float(dict_2['dproflvl'])+1:
                        score+=0.56
                    elif float(dict_1['dproflvl']) == float(dict_2['dproflvl'])-1:
                        score+=0.56
                    else:
                        pass
                        #print('Data expertise proficiency level not matched')
                        
        #designation match
        if designation_val[dict_1['designation']] == designation_val[dict_2['designation']]:
            score+=0.56
            #print('designation status matched')
        elif designation_val[dict_1['designation']] == designation_val[dict_2['designation']]+1:
            score+=0.56
            #print('supply designation is one level ahead')
        elif designation_val[dict_1['designation']] == designation_val[dict_2['designation']]-1:
            score+=0.56
            #print('supply designation is one level down')
        else:
            pass
            #print('Designation not  as per the requirement')


        x = "{:.2f}".format(score)

        print(dict_2['so#'],'---',dict_1['associate id'],'------',x,'\n')
        dff=dff._append({'Project ID':dict_2['so#'].upper(),'Associate ID':dict_1['associate id'],'Associate Primary Skill':dict_1['pskillset'],'Associate Secondary Skill':dict_1['sskillset'],'Required Primary Skill':dict_2['pskillset'],'Required Secondary Skill':dict_2['sskillset'],'Score':x},ignore_index=True)
    
    
      
    dff = dff.sort_values(by='Score', ascending=False)
#     dff.to_csv('ok.csv')
    
        # Define a function to apply color formatting
#     def color_format(val):
#         color_range = np.linspace(1.0, 11.0, num=256)
#         color_index = int((float(val) - 1.0) / 10.0 * 255)
#         color = f'rgb({255 - color_index}, {color_index}, 0)'
#         return f'background-color: {color}'

  
    
    
    def color_format(val):
        
        # Scale the value to a range between 0 and 1
        scaled_val = (float(val) - 1.0) / 10.0
        # Map the scaled value to a color range from red to green
        red = int(max(100, min(255, (1 - scaled_val) * 255)))
        green = int(max(100, min(255, scaled_val * 255)))
        blue = 150  # Set a constant value for blue
        # Generate the RGB color code
        color = f'rgb({red}, {green}, {blue})'
        return f'background-color: {color}'
    
    
   

    dff_new = dff.style.applymap(color_format, subset=['Score']).hide()

    
    dff_new.set_table_styles([
    {"selector": "table", "props": [("border-collapse", "collapse"), ("border", "2px solid black")]},
    {"selector": "th", "props": [("background-color", "lightblue"), ("border", "1px solid black"), ("text-align", "center"), ("font-weight", "bold")]},
    {"selector": "td:not(:last-child)", "props": [("background-color", "lightyellow"), ("border", "1px solid black")]}])
    
#     dff_new.to_html('ok1.html')
    
    heading = "<h1>Project eligibility Report</h1>"

    # Assuming html_content contains the HTML table string
    html = f"{heading}{dff_new.to_html()}"

    # ... (rest of your code)
    with open('report_New.html','w') as f:
        f.write(html)
        print('Report Generated in the diirectory look for file name "report_New.html"')

    
    
    #cell4


    # enter project id prompt to find the 

# function to call input & output
def convert_row_to_dict(df2, sno):
  try:
    filtered_df = df2[df2['so#'] == sno]
    if filtered_df.empty:
      print(f"SNO '{sno}' not found in the DataFrame.")
      return None
    
    row_dict = filtered_df.iloc[0].to_dict()
    return row_dict

  except Exception as e:
    print(f"An error occurred: {e}")
    return None


sno = input("Enter SNO: ").strip().lower()


row_dict = convert_row_to_dict(df2, sno)

if row_dict:
  score_calculator(df1,row_dict)
